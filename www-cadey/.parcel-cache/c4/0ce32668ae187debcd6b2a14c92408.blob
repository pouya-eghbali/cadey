var $c6f2a01759d4200705c679e7b6a8a85f$exports = {};
var $c6f2a01759d4200705c679e7b6a8a85f$var$process = $parcel$require("c6f2a01759d4200705c679e7b6a8a85f", "process");

function $c6f2a01759d4200705c679e7b6a8a85f$var$_toArray(arr) { return $c6f2a01759d4200705c679e7b6a8a85f$var$_arrayWithHoles(arr) || $c6f2a01759d4200705c679e7b6a8a85f$var$_iterableToArray(arr) || $c6f2a01759d4200705c679e7b6a8a85f$var$_nonIterableRest(); }

function $c6f2a01759d4200705c679e7b6a8a85f$var$_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function $c6f2a01759d4200705c679e7b6a8a85f$var$_slicedToArray(arr, i) { return $c6f2a01759d4200705c679e7b6a8a85f$var$_arrayWithHoles(arr) || $c6f2a01759d4200705c679e7b6a8a85f$var$_iterableToArrayLimit(arr, i) || $c6f2a01759d4200705c679e7b6a8a85f$var$_nonIterableRest(); }

function $c6f2a01759d4200705c679e7b6a8a85f$var$_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function $c6f2a01759d4200705c679e7b6a8a85f$var$_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function $c6f2a01759d4200705c679e7b6a8a85f$var$_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

//const fs = require("fs");
//const path = require("path");
var $c6f2a01759d4200705c679e7b6a8a85f$var$mime = $parcel$require("c6f2a01759d4200705c679e7b6a8a85f", "mime-types");

var $c6f2a01759d4200705c679e7b6a8a85f$var$readFile = function readFile(src) {
  return fs.readFileSync(path.join($c6f2a01759d4200705c679e7b6a8a85f$var$process.cwd(), src)).toString();
};

var $c6f2a01759d4200705c679e7b6a8a85f$var$getLang = function getLang(src) {
  var info = $c6f2a01759d4200705c679e7b6a8a85f$var$mime.lookup(src);
  return info ? info.split("/").pop() : info;
};

var $c6f2a01759d4200705c679e7b6a8a85f$var$macros = {
  heading: function heading(options) {
    var size = options.size;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return "<h".concat(size, "> ").concat(args.join(""), " </h").concat(size, ">");
  },
  bold: function bold(options) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    return "<b> ".concat(args.join(""), " </b>");
  },
  italic: function italic(options) {
    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    return "<i> ".concat(args.join(""), " </i>");
  },
  strike: function strike(options) {
    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
      args[_key4 - 1] = arguments[_key4];
    }

    return "<del> ".concat(args.join(""), " </del>");
  },
  image: function image(options) {
    var width = options.width,
        height = options.height;

    for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
      args[_key5 - 1] = arguments[_key5];
    }

    var _args$filter = args.filter(function (arg) {
      return !arg.match(/^\s+$/);
    }),
        _args$filter2 = $c6f2a01759d4200705c679e7b6a8a85f$var$_slicedToArray(_args$filter, 2),
        src = _args$filter2[0],
        _args$filter2$ = _args$filter2[1],
        alt = _args$filter2$ === void 0 ? "" : _args$filter2$;

    var atts = [];
    if (width) atts.push("width=\"".concat(width, "px\""));
    if (height) atts.push("height=\"".concat(height, "px\""));
    atts.push("src=\"".concat(src, "\""));
    if (alt) atts.push("alt=\"".concat(alt.join(" "), "\""));
    return "\n      <span class=\"image-container\">\n        <img ".concat(atts.join(""), ">\n      </span>\n    ");
  },
  link: function link(options) {
    for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
      args[_key6 - 1] = arguments[_key6];
    }

    var _args$filter3 = args.filter(function (arg) {
      return !arg.match(/^ +$/);
    }),
        _args$filter4 = $c6f2a01759d4200705c679e7b6a8a85f$var$_toArray(_args$filter3),
        href = _args$filter4[0],
        text = _args$filter4.slice(1);

    return "<a href=\"".concat(href, "\">").concat(text.join(" "), "</a>");
  },
  table: function table(options) {
    var row = options.row,
        header = options.header;
    var thead = header ? "<tr>" + header.map(function (cell) {
      return "<th> ".concat(cell, " </th>");
    }).join("\n") + "</tr>" : "";
    var tbody = row.map(function (r) {
      return r.map(function (cell) {
        return "<td> ".concat(cell, " </td>");
      }).join("\n");
    }).map(function (r) {
      return "<tr> ".concat(r, " </tr>");
    }).join("\n");
    return "\n      <table>\n        <thead> ".concat(thead, " </thead>\n        <tbody> ").concat(tbody, " </tbody>\n      </table>\n    ");
  },
  list: function list(options) {
    var _options$type = options.type,
        type = _options$type === void 0 ? "unordered" : _options$type;

    for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
      args[_key7 - 1] = arguments[_key7];
    }

    var items = args.filter(function (arg) {
      return typeof arg != "string" || !arg.match(/^[ \n]+$/);
    }).map(function (arg) {
      return Array.isArray(arg) ? arg.join("") : arg;
    }).map(function (item) {
      return "<li> ".concat(item, " </li>");
    }).join("\n");
    var el = type == "ordered" ? "ol" : "ul";
    return "<".concat(el, "> ").concat(items, " </").concat(el, ">");
  },
  code: function code(options) {
    var language = options.language,
        content = options.content;

    for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {
      args[_key8 - 1] = arguments[_key8];
    }

    var code = content ? $c6f2a01759d4200705c679e7b6a8a85f$var$readFile(content.join("").trim()) : args.join("").trim();

    var getLangName = function getLangName() {
      return $c6f2a01759d4200705c679e7b6a8a85f$var$getLang(content.join("").trim());
    };

    var langCode = language || (content ? getLangName() : "");
    var classList = langCode ? "lang-".concat(langCode) : "";
    return "<pre><code class=\"".concat(classList, "\">").concat(code, "</code></pre>");
  },
  quote: function quote(options) {
    var author = options.author;

    for (var _len9 = arguments.length, args = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {
      args[_key9 - 1] = arguments[_key9];
    }

    return "<blockquote> ".concat(args.join(""), " </blockquote>");
  }
};
var $c6f2a01759d4200705c679e7b6a8a85f$export$macros = $c6f2a01759d4200705c679e7b6a8a85f$var$macros;
$c6f2a01759d4200705c679e7b6a8a85f$exports.macros = $c6f2a01759d4200705c679e7b6a8a85f$export$macros;